name: Build UABEA Cross-Platform
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-2022]
      fail-fast: false  # Allow other builds to continue if one fails
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
        
    - name: Setup MSBuild (Windows only)
      if: runner.os == 'Windows'
      uses: microsoft/setup-msbuild@v1.1
      
    - name: Build UABEA
      shell: bash
      run: |
        if [ "${{ runner.os }}" == "Linux" ]; then
          dotnet publish UABEAvalonia/UABEAvalonia.csproj \
            -c Release \
            -r linux-x64 \
            --self-contained true \
            -p:PublishSingleFile=true \
            -o ./publish/ubuntu
        else
          dotnet publish UABEAvalonia/UABEAvalonia.csproj \
            -c Release \
            -r win-x64 \
            --self-contained true \
            -p:PublishSingleFile=true \
            -o ./publish/windows
        fi

    - name: Verify Build Output (Linux)
      if: runner.os == 'Linux'
      shell: bash
      run: |
        if [ ! -d "./publish/ubuntu" ]; then
          echo "Build output directory not found!"
          exit 1
        fi
        if [ -z "$(ls -A ./publish/ubuntu)" ]; then
          echo "Build output directory is empty!"
          exit 1
        fi
        echo "Build output verified successfully"

    - name: Verify Build Output (Windows)
      if: runner.os == 'Windows'
      shell: bash
      run: |
        if [ ! -d "./publish/windows" ]; then
          echo "Build output directory not found!"
          exit 1
        fi
        if [ -z "$(ls -A ./publish/windows)" ]; then
          echo "Build output directory is empty!"
          exit 1
        fi
        echo "Build output verified successfully"
        
    - name: Package as Zip
      shell: bash
      run: |
        if [ "${{ runner.os }}" == "Linux" ]; then
          zip -r uabea-ubuntu.zip ./publish/ubuntu
        else
          zip -r uabea-windows.zip ./publish/windows
        fi
        
    - name: Upload Ubuntu Zip
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@v3
      with:
        name: uabea-ubuntu
        path: uabea-ubuntu.zip
        
    - name: Upload Windows Zip
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v3
      with:
        name: uabea-windows
        path: uabea-windows.zip
